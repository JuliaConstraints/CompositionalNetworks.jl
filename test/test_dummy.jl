"""
    all_different(x; X = zeros(length(x), 2), param=nothing, dom_size)

Composition `all_different` generated by CompositionalNetworks.jl.
```
all_different = euclidean ∘ count_positive ∘ sum ∘ [contiguous_inputs_minus_rev, count_eq_left]
```
"""
function all_different(x; X=zeros(length(x), 2), param=nothing, dom_size)
    CompositionalNetworks.tr_in(
        Tuple([
            CompositionalNetworks.tr_contiguous_inputs_minus_rev,
            CompositionalNetworks.tr_count_eq_left,
        ]),
        X,
        x,
        param,
    )
    X[1:length(x), 1] .=
        1:length(x) .|> (i -> CompositionalNetworks.ar_sum(@view X[i, 1:2]))
    return CompositionalNetworks.ag_count_positive(@view X[:, 1]) |>
           (y -> CompositionalNetworks.co_euclidean(y; param, dom_size, nvars=length(x)))
end
